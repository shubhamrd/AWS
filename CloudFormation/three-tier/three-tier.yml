AWSTemplateFormatVersion: '2010-09-09'
Description: A basic three-tier architecture with EC2 instances.

Resources:
  
  # Presentation Layer (Web Server)
  WebServerSecurityGroup:
    Type: 'AWS::EC2::SecurityGroup'
    Properties:
      GroupDescription: Allow HTTP traffic
      SecurityGroupIngress:
      - IpProtocol: tcp
        FromPort: '80'
        ToPort: '80'
        CidrIp: 0.0.0.0/0

  WebServerInstance:
    Type: 'AWS::EC2::Instance'
    Properties:
      InstanceType: t2.micro
      ImageId: ami-0c55b159cbfafe1f0 # This is a placeholder. Replace with a relevant AMI ID for your web server.
      SecurityGroups:
      - !Ref WebServerSecurityGroup

  # Application Layer
  AppServerSecurityGroup:
    Type: 'AWS::EC2::SecurityGroup'
    Properties:
      GroupDescription: Allow internal traffic
      SecurityGroupIngress:
      - IpProtocol: tcp
        FromPort: '8080'
        ToPort: '8080'
        CidrIp: 10.0.0.0/16 # Adjust based on your VPC CIDR

  AppServerInstance:
    Type: 'AWS::EC2::Instance'
    Properties:
      InstanceType: t2.micro
      ImageId: ami-0c55b159cbfafe1f0 # Placeholder. Replace with a relevant AMI ID for your app server.
      SecurityGroups:
      - !Ref AppServerSecurityGroup

  # Data Layer (Database)
  DatabaseSecurityGroup:
    Type: 'AWS::EC2::SecurityGroup'
    Properties:
      GroupDescription: Allow internal traffic
      SecurityGroupIngress:
      - IpProtocol: tcp
        FromPort: '3306'
        ToPort: '3306'
        CidrIp: 10.0.0.0/16 # Adjust based on your VPC CIDR

  DatabaseInstance:
    Type: 'AWS::EC2::Instance'
    Properties:
      InstanceType: t2.micro
      ImageId: ami-0c55b159cbfafe1f0 # Placeholder. Replace with a relevant AMI ID for your database.
      SecurityGroups:
      - !Ref DatabaseSecurityGroup
